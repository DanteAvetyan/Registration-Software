{"ast":null,"code":"var _jsxFileName = \"/home/dante/WebstormProjects/ModFlyMUI/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Typography, Button, Paper, Table, TableBody, TableCell, TableRow, Radio, RadioGroup, FormControlLabel } from '@mui/material';\nimport { useCart } from './CartContext'; // Import useCart hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [calendarDays, setCalendarDays] = useState([]);\n  const {\n    addToCart\n  } = useCart(); // Assuming useCart has addToCart function\n\n  useEffect(() => {\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\n    const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\n    const totalDays = lastDayOfMonth.getDate();\n\n    // Get the weekday index (0 = Sunday, 1 = Monday, etc.)\n    const startDayIndex = (firstDayOfMonth.getDay() + 4) % 7; // Shift days to the right by 4\n\n    // Generate calendar days array\n    const days = [];\n\n    // Add blank days for the first row before the first day of the month\n    for (let i = 0; i < startDayIndex; i++) {\n      days.push(null); // Empty cells\n    }\n\n    // Add actual days of the month\n    for (let i = 1; i <= totalDays; i++) {\n      days.push(i);\n    }\n    setCalendarDays(days);\n  }, [currentMonth, currentYear]);\n  const handleRadioChange = event => {\n    setSelectedDate(event.target.value);\n  };\n  const handleAddToCart = () => {\n    if (selectedDate) {\n      addToCart(selectedDate);\n    } else {\n      alert('Please select a date first!');\n    }\n  };\n  const renderCalendar = () => {\n    return calendarDays.map((day, index) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '14.28%',\n        textAlign: 'center',\n        padding: '10px'\n      },\n      children: day ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: 'transparent'\n        },\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Select a Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        value: selectedDate,\n        onChange: handleRadioChange,\n        children: calendarDays.map((day, index) => day && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: day.toString(),\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 42\n          }, this),\n          label: `Day ${day}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleAddToCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: 2\n      },\n      children: renderCalendar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"jj4xhaQLWFJQr+p2RzVTdVjNEzk=\", false, function () {\n  return [useCart];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Typography","Button","Paper","Table","TableBody","TableCell","TableRow","Radio","RadioGroup","FormControlLabel","useCart","jsxDEV","_jsxDEV","Calendar","_s","selectedDate","setSelectedDate","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","calendarDays","setCalendarDays","addToCart","firstDayOfMonth","lastDayOfMonth","totalDays","getDate","startDayIndex","getDay","days","i","push","handleRadioChange","event","target","value","handleAddToCart","alert","renderCalendar","map","day","index","sx","width","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onChange","toString","control","label","onClick","container","display","flexWrap","marginTop","_c","$RefreshReg$"],"sources":["/home/dante/WebstormProjects/ModFlyMUI/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Grid, Typography, Button, Paper, Table, TableBody, TableCell, TableRow, Radio, RadioGroup, FormControlLabel } from '@mui/material';\nimport { useCart } from './CartContext'; // Import useCart hook\n\nconst Calendar = () => {\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n    const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n    const [calendarDays, setCalendarDays] = useState([]);\n    const { addToCart } = useCart(); // Assuming useCart has addToCart function\n\n    useEffect(() => {\n        const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\n        const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\n        const totalDays = lastDayOfMonth.getDate();\n\n        // Get the weekday index (0 = Sunday, 1 = Monday, etc.)\n        const startDayIndex = (firstDayOfMonth.getDay() + 4) % 7; // Shift days to the right by 4\n\n        // Generate calendar days array\n        const days = [];\n\n        // Add blank days for the first row before the first day of the month\n        for (let i = 0; i < startDayIndex; i++) {\n            days.push(null); // Empty cells\n        }\n\n        // Add actual days of the month\n        for (let i = 1; i <= totalDays; i++) {\n            days.push(i);\n        }\n\n        setCalendarDays(days);\n    }, [currentMonth, currentYear]);\n\n    const handleRadioChange = (event) => {\n        setSelectedDate(event.target.value);\n    };\n\n    const handleAddToCart = () => {\n        if (selectedDate) {\n            addToCart(selectedDate);\n        } else {\n            alert('Please select a date first!');\n        }\n    };\n\n    const renderCalendar = () => {\n        return calendarDays.map((day, index) => (\n            <Box key={index} sx={{ width: '14.28%', textAlign: 'center', padding: '10px' }}>\n                {day ? (\n                    <Typography>{day}</Typography>\n                ) : (\n                    <Typography sx={{ color: 'transparent' }}>0</Typography>\n                )}\n            </Box>\n        ));\n    };\n\n    return (\n        <Box>\n            <Paper>\n                <Typography variant=\"h6\">Select a Date</Typography>\n                <RadioGroup value={selectedDate} onChange={handleRadioChange}>\n                    {calendarDays.map((day, index) => (\n                        day && (\n                            <FormControlLabel\n                                key={index}\n                                value={day.toString()}\n                                control={<Radio />}\n                                label={`Day ${day}`}\n                            />\n                        )\n                    ))}\n                </RadioGroup>\n                <Button variant=\"contained\" onClick={handleAddToCart}>Add to Cart</Button>\n            </Paper>\n            <Grid container sx={{ display: 'flex', flexWrap: 'wrap', marginTop: 2 }}>\n                {renderCalendar()}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}