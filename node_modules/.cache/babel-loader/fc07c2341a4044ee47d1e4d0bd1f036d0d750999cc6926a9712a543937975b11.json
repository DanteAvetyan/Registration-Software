{"ast":null,"code":"var _jsxFileName = \"/home/dante/WebstormProjects/ModFlyMUI/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Grid, Typography, Button, Paper, Table, TableBody, TableCell, TableRow, ButtonGroup } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const schedule = {\n    Monday: [{\n      group: \"Adults\",\n      time: \"12PM-2PM\",\n      cost: 15\n    }, {\n      group: \"Ages 6-8\",\n      time: \"2PM-8PM\",\n      cost: 15\n    }],\n    Tuesday: [{\n      group: \"Teens\",\n      time: \"1PM-3PM\",\n      cost: 20\n    }, {\n      group: \"Ages 6-8\",\n      time: \"4PM-6PM\",\n      cost: 10\n    }],\n    Wednesday: [{\n      group: \"Adults\",\n      time: \"10AM-12PM\",\n      cost: 18\n    }, {\n      group: \"Teens\",\n      time: \"2PM-4PM\",\n      cost: 22\n    }],\n    Thursday: [{\n      group: \"Adults\",\n      time: \"1PM-3PM\",\n      cost: 20\n    }, {\n      group: \"Ages 6-8\",\n      time: \"3PM-5PM\",\n      cost: 12\n    }],\n    Friday: [{\n      group: \"Adults\",\n      time: \"11AM-1PM\",\n      cost: 15\n    }, {\n      group: \"Teens\",\n      time: \"1PM-3PM\",\n      cost: 17\n    }]\n  };\n  const handleDayClick = day => {\n    setSelectedDate(day);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Class Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Select a Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            orientation: \"vertical\",\n            fullWidth: true,\n            children: Object.keys(schedule).map(day => /*#__PURE__*/_jsxDEV(Button, {\n              variant: selectedDate === day ? \"contained\" : \"outlined\",\n              onClick: () => handleDayClick(day),\n              fullWidth: true,\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: selectedDate ? `Selected Date: ${selectedDate}` : \"No day selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), selectedDate && schedule[selectedDate] ? /*#__PURE__*/_jsxDEV(Table, {\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: schedule[selectedDate].map((slot, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: slot.group\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: slot.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [\"$\", slot.cost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Please select a day to view the schedule.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"X+343bWD8vGlMCAq1//cBGL6GcI=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","Box","Grid","Typography","Button","Paper","Table","TableBody","TableCell","TableRow","ButtonGroup","jsxDEV","_jsxDEV","Calendar","_s","selectedDate","setSelectedDate","schedule","Monday","group","time","cost","Tuesday","Wednesday","Thursday","Friday","handleDayClick","day","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","orientation","fullWidth","Object","keys","map","onClick","slot","index","_c","$RefreshReg$"],"sources":["/home/dante/WebstormProjects/ModFlyMUI/src/components/Calendar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n    Box,\n    Grid,\n    Typography,\n    Button,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    ButtonGroup,\n} from \"@mui/material\";\n\nconst Calendar = () => {\n    const [selectedDate, setSelectedDate] = useState(\"\");\n    const schedule = {\n        Monday: [\n            { group: \"Adults\", time: \"12PM-2PM\", cost: 15 },\n            { group: \"Ages 6-8\", time: \"2PM-8PM\", cost: 15 },\n        ],\n        Tuesday: [\n            { group: \"Teens\", time: \"1PM-3PM\", cost: 20 },\n            { group: \"Ages 6-8\", time: \"4PM-6PM\", cost: 10 },\n        ],\n        Wednesday: [\n            { group: \"Adults\", time: \"10AM-12PM\", cost: 18 },\n            { group: \"Teens\", time: \"2PM-4PM\", cost: 22 },\n        ],\n        Thursday: [\n            { group: \"Adults\", time: \"1PM-3PM\", cost: 20 },\n            { group: \"Ages 6-8\", time: \"3PM-5PM\", cost: 12 },\n        ],\n        Friday: [\n            { group: \"Adults\", time: \"11AM-1PM\", cost: 15 },\n            { group: \"Teens\", time: \"1PM-3PM\", cost: 17 },\n        ],\n    };\n\n    const handleDayClick = (day) => {\n        setSelectedDate(day);\n    };\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Typography variant=\"h4\" gutterBottom>\n                Class Calendar\n            </Typography>\n            <Grid container spacing={2}>\n                {/* Left Panel with buttons for each day */}\n                <Grid item xs={12} md={4}>\n                    <Paper sx={{ p: 2 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Select a Day\n                        </Typography>\n                        <ButtonGroup orientation=\"vertical\" fullWidth>\n                            {Object.keys(schedule).map((day) => (\n                                <Button\n                                    key={day}\n                                    variant={selectedDate === day ? \"contained\" : \"outlined\"}\n                                    onClick={() => handleDayClick(day)}\n                                    fullWidth\n                                >\n                                    {day}\n                                </Button>\n                            ))}\n                        </ButtonGroup>\n                    </Paper>\n                </Grid>\n\n                {/* Right Panel displaying the selected day and its schedule */}\n                <Grid item xs={12} md={8}>\n                    <Paper sx={{ p: 2 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {selectedDate ? `Selected Date: ${selectedDate}` : \"No day selected\"}\n                        </Typography>\n                        {selectedDate && schedule[selectedDate] ? (\n                            <Table>\n                                <TableBody>\n                                    {schedule[selectedDate].map((slot, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell>{slot.group}</TableCell>\n                                            <TableCell>{slot.time}</TableCell>\n                                            <TableCell>${slot.cost}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        ) : (\n                            <Typography variant=\"body1\">Please select a day to view the schedule.</Typography>\n                        )}\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}